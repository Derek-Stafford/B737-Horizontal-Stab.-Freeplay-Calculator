from tabulate import tabulate

# Cosmetic
bold = '\033[1m'
end = '\033[0m'
green = '\033[92m'
italic = '\033[3m'
red = '\033[31m'

# Input Values
D1 = float(input(italic+bold+"D1 = "+end))
D2 = float(input(italic+bold+"D2 = "+end))
D3 = float(input(italic+bold+"D3 = "+end))
variables = [
	["D1", 0.066], 
	["D2", 0.066],
	["D3", 0.056],
	["H", 0.078]
]
header= ["Variables","Threshold"]
print (tabulate(variables,headers =header,tablefmt="grid"))
# Calculation
H = (1.25*D3)+((D1+D2)/2)

equation = [
		["H = (1.25*D3)+((D1 + D2)/2)", H]
]
header_2 = ["Input", "Output"]
print(tabulate(equation, headers=header_2, tablefmt="grid"))



# Threshold Messages
def check_value(name, value, threshold):
		if value > threshold:
				return bold+italic+red +f"{name} Failed"+end
		else:
				return italic+green+f"{name} Passed"+end

# Check Values against Threshold Conditions
header_3 = ["Variable Name", "Ouput", "Result"]

# Instead of printing the results, we store them in a list for tabulate
results = [
		["D1", f"{D1:.4f}", check_value("D1", D1, 0.066)],
		["D2", f"{D2:.4f}", check_value("D2", D2, 0.066)],
		["D3", f"{D3:.4f}", check_value("D3", D3, 0.056)],
		["H", f"{H:.4f}", check_value("H", H, 0.078)]
]

# Display the results in a table
print(tabulate(results, headers=header_3, tablefmt="grid"))